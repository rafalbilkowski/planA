import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BCM)
import time
import serial
import statistics
uart=serial.Serial("/dev/ttyS0", baudrate=9600, parity=serial.PARITY_NONE,
                   stopbits=serial.STOPBITS_ONE, bytesize=serial.EIGHTBITS, timeout=5)
#16 i 20 a drugi  i 21 26
def set_start():
    global start
    start = time.time()
def Start():
    print("a")
    mcp4728.channel_b.value = 65535
    
def Stop():
    print("a")
    mcp4728.channel_b.value = 0

def set_end():
    global end
    end = time.time()
GPIO.setwarnings(False)
sensorrpm = 6
GPIO.setup(sensorrpm, GPIO.IN,pull_up_down=GPIO.PUD_UP)
global ptablica
ptablica = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]   
global i, mediana,t, dtpróba, ilośćpróbek,rpm
rpm = 0
dtpróba = 0
t = 0
mediana = 0
i = 0
ilośćpróbek = 0
def obliczrpm():
    global dt, dtpróba,rpm,mediana,pwmstrobo,zmienna,zmienna2
    dt = mediana
    if dt > 0:
        rpm = (1/dt * 60,3)
        print(rpm)
    
            
def fell(n):
    global t, dtpróba, rpm,pwmstrobo, ptablica,i,mediana, ilośćpróbek
    dt = time.time() - t
    i = i +1
   
    dtpróba = dtpróba + dt
    ptablica[i] = dt
   
    if i>15:
        i = 0
        
        mediana = statistics.median(ptablica)
        
        obliczrpm()
      
        ilośćpróbek = 0
        dtpróba = 0
       
    
    
    t = time.time()
    ilośćpróbek  = ilośćpróbek +1



from rpi_hardware_pwm import HardwarePWM
GPIO.add_event_detect(sensorrpm,GPIO.RISING, callback=fell)





global sample, count

sample = 256
count = 0









def task():
    speed = w.get()
    speed2 = w1.get()
   
    time.sleep(1)
    pwm.start(speed)
    pwm1.start(speed2)
    uart.write('ABC'.encode())
    master.after(500, task)
    
def zerov():
    #silnik 10
    GPIO.setup(16, GPIO.OUT)
    GPIO.output(16, GPIO.LOW)
    GPIO.setup(20, GPIO.OUT)
    GPIO.output(20, GPIO.HIGH)
    #silnik
    GPIO.setup(21, GPIO.OUT)
    GPIO.output(21, GPIO.LOW)
    GPIO.setup(26, GPIO.OUT)
    GPIO.output(26, GPIO.HIGH)   

zerov()
pwm1 = HardwarePWM(0, hz=8000)
pwm = HardwarePWM(1, hz=8000)
pwm.start(0)
pwm1.start(0)

from tkinter import *

master = Tk()
w = Scale(master, from_=0, to=100, orient=HORIZONTAL,length=600)
w.pack()
w1 = Scale(master, from_=0, to=100, orient=HORIZONTAL,length=600)
w1.pack()
master.after(2000, task)
mainloop()

